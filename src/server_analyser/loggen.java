/*
 *******************************************************************************
      ATTENTION :: BACK DOOR PRESET IN DATABASE !
 *******************************************************************************


 *Please note that a default Username SYS with Password: 1111111111,
can be used for Loging as Administrator.
 *It is highly recommended that the above entry is removed from database
after first entry is made.
 *Ignorance may result into an attack on server which is not covered under policy terms
of software.
 */

 /*
 * loggen.java
 *
 * Created on 3 Mar, 2017, 7:49:21 PM
 */
package server_analyser;

/**
 *
 * @author HP
 */
import java.awt.Desktop;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.sql.*;
import javax.swing.JOptionPane;

public class loggen extends javax.swing.JFrame {

    /**
     * Creates new form loggen
     */
    public loggen() {
        initComponents();
        setIcon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        u = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        p = new javax.swing.JPasswordField();
        lb1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Server Analyser 1.0  Beta Release.");
        setLocation(new java.awt.Point(500, 150));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Report Generator : Server Side Critical Analysis Software");

        jLabel2.setText("Enter Admin Username :");

        jLabel3.setText("Enter Password :");

        u.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uActionPerformed(evt);
            }
        });

        jButton1.setText("Click to Login");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lb1.setText("The Password must be of 10 Characters only.");

        jButton2.setText("Sign Up for Admin");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(p)
                            .addComponent(u, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(63, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(37, 37, 37))
            .addGroup(layout.createSequentialGroup()
                .addGap(198, 198, 198)
                .addComponent(lb1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(120, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(u, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)))
                .addGap(18, 18, 18)
                .addComponent(lb1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void uActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_uActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        /*Code Under Login button will connect to a database that stores Username and Password Information of Admins.*/
        String pass = "";

        int i = 0;
        String usr = u.getText();

        /*
        Encryption for user-name in database table
        Encryption key for all words are 4
        Caution : Do not modify  this key value.
        Any modification of the keys will render existing database useless !
         */
        final int key = 4;
        int pwdlength;           //password length to be obtained from database 
        usr = usr.toUpperCase();
        int len = usr.length();
        char a = ' ';
        String y = "";
        for (i = 0; i < len; i++) {
            a = usr.charAt(i);
            a = (char) ((char) a + key);
            if (a < 'A') {
                y = y + (char) (a + 26);
            } else if (a > 'Z') {
                y = y + (char) (a - 26);
            } else {
                y = y + a;
            }
        }
        //Encrypted username is stored in y.

        /*End of encryption algorithm*/
        try {
            //Registering JDBC Driver...
            Class.forName("com.mysql.jdbc.Driver");
            //The Database Connection Statement...
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/serverdata", "root", "1111");
            //Statement Object Command...
            Statement stm = conn.createStatement();
            u.setText("***********************");
            String query1 = "select LENGTH(password) from priv_usr where uname='" + y + "';";
            ResultSet rs0 = stm.executeQuery(query1);

            if (rs0.first() == true) {
                pwdlength = Integer.parseInt(rs0.getString(1));

                char pwd[] = new char[pwdlength]; //Array length=10...Therefore,length of Password must be=10.
                pwd = p.getPassword();

                for (i = 0; i < pwdlength; i++) {
                    pass += pwd[i];
                }
                p.setText("***********************");

                rs0.close();
                stm.close();
                conn.close();

                try {
                    //Registering JDBC Driver...
                    Class.forName("com.mysql.jdbc.Driver");
                    //The Database Connection Statement...
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/serverdata", "root", "1111");
                    //Statement Object Command...
                    Statement stmt = con.createStatement();

                    String query = "select uname from priv_usr where uname='" + y + "' and password='" + pass + "';";

                    ResultSet rs = stmt.executeQuery(query);
                    if (rs.next() == true) {
                        JOptionPane.showMessageDialog(null, "Login Successful ! ");
                        dispose();
                        new Options().setVisible(true);
                    } else {
                        JOptionPane.showMessageDialog(null, "Wrong Username and Password Combination.\nInterface will Abort !");
                        dispose();

                        try {
                            File outer = new File("C:\\Users\\Biswajit Roy\\Documents\\ServerAnalyser-master\\logout.jar");
                            Desktop.getDesktop().open(outer);
                        } catch (IOException e) {
                            e.printStackTrace();
                        }
                    }

                    rs.close();
                    stmt.close();
                    con.close();

                } catch (HeadlessException e) {
                    JOptionPane.showMessageDialog(null, "Failed to Connect to Host.\nTry Again after Sometime.");
                } catch (ClassNotFoundException e) {
                    JOptionPane.showMessageDialog(null, "Failed to Connect to Host.\nTry Again after Sometime.");
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, "Failed to Connect to Host.\nTry Again after Sometime.");
                }

//Universal catch() executed unless password mismatch...
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Wrong Username or Password !\nTry Again !");
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
        new signup().setVisible(true);

    }//GEN-LAST:event_jButton2ActionPerformed
    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("prgicon.png")));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new loggen().setVisible(false);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lb1;
    private javax.swing.JPasswordField p;
    private javax.swing.JTextField u;
    // End of variables declaration//GEN-END:variables
}
