/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package server_analyser;

/**
 *
 * @author HP
 */
import java.awt.HeadlessException;
import java.awt.Toolkit;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import javax.swing.JOptionPane;

public class regadmin extends javax.swing.JFrame {

    /**
     * Creates new form regadmin
     */
    public regadmin() {
        initComponents();
        setIcon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        requests = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        uname = new javax.swing.JTextField();
        validate = new javax.swing.JButton();
        newlist = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tb2 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        grade = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        opr = new javax.swing.JTextField();
        lgt = new javax.swing.JButton();
        back = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        ml = new javax.swing.JTextField();
        ph = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Register New Admin Window");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(500, 150));

        requests.setText("Load Admin Requests");
        requests.setToolTipText("Click to display table of administrator requests.");
        requests.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        requests.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestsActionPerformed(evt);
            }
        });

        tb1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "E-mail", "Phone", "Type", "Gender"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tb1.setToolTipText("Administrator requests submitted via Sign Up form.");
        jScrollPane1.setViewportView(tb1);

        jLabel1.setText("Adimistrator Activity Region : Please fill in details.");

        jLabel2.setText("Enter name of administrator to be registered :");

        uname.setToolTipText("Enter name of new administrator.");
        uname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unameActionPerformed(evt);
            }
        });

        validate.setText("Validate and send E-mail Confirmation");
        validate.setToolTipText("Validate and register candidate and send a noification !");
        validate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        validate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validateActionPerformed(evt);
            }
        });

        newlist.setText("Load Administrator List");
        newlist.setToolTipText("Load New Administrator's List.");
        newlist.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        newlist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newlistActionPerformed(evt);
            }
        });

        tb2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User ID", "User Name", "Admin Type", "Grade"
            }
        ));
        jScrollPane2.setViewportView(tb2);

        jLabel3.setText("Assign Grade to Administrator :");

        grade.setToolTipText("Enter administrator's grade.");

        jLabel4.setText("Assign Operator Type/Position :");

        opr.setToolTipText("Enter position of administrator in firm.");
        opr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oprActionPerformed(evt);
            }
        });

        lgt.setText("Logout");
        lgt.setToolTipText("End your session and quit application.");
        lgt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lgt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lgtActionPerformed(evt);
            }
        });

        back.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        back.setForeground(new java.awt.Color(153, 153, 153));
        back.setText("<");
        back.setToolTipText("Back to previous");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        jLabel5.setText("Enter Admin's E-mail ID :");

        jLabel6.setText("Enter Admin's Phone Number:");

        ml.setToolTipText("Enter the email ID of administrator");

        ph.setToolTipText("Enter adiministrator's phone number.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(validate, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                    .addComponent(newlist, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(back)
                .addGap(36, 36, 36)
                .addComponent(requests, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lgt, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(72, 72, 72)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(uname, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(opr, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(grade, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ml, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ph, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lgt)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(requests)
                            .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(uname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(grade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(opr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(ml, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(ph, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(validate)
                .addGap(18, 18, 18)
                .addComponent(newlist)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void unameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unameActionPerformed

    private void validateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validateActionPerformed
        String usr = uname.getText();
        String pwd = "default001";
        String g = grade.getText();
        String typ = opr.getText();
        String mail = ml.getText();
        long phno = Long.parseLong(ph.getText());
        int uid = 0;               //auto-generate this !
        int i;
        //Username Encryption Code...

        final int key = 4;
        usr = usr.toUpperCase();
        int len = usr.length();
        char a = ' ';
        String y = "";
        for (i = 0; i < len; i++) {
            a = usr.charAt(i);
            a = (char) ((char) a + key);
            if (a < 'A') {
                y = y + (char) (a + 26);
            } else if (a > 'Z') {
                y = y + (char) (a - 26);
            } else {
                y = y + a;
            }
        }
        //Encrypted username is stored in y.

        //End of Encryption Code...
        try {
            //Registering JDBC Driver...
            Class.forName("com.mysql.jdbc.Driver");
            //The Database Connection Statement...
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/serverdata", "root", "1111");
            //Statement Object Command...
            Statement stmt = con.createStatement();
            String query = "insert into priv_usr values(" + uid + ",'" + y + "','" + mail + "'," + phno + ",'" + typ + "','" + g + "','" + pwd + "');";
            stmt.executeUpdate(query);
            stmt.close();
            con.close();
            JOptionPane.showMessageDialog(null, "Administrator Access granted to User " + usr + ".\nUser ID and Password will be mailed shortly !");
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Failed to Connect to Host.\nClass Not Found\nTry Again after Sometime.");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Failed to Connect to Host.\nSQL Exception\nTry Again after Sometime.");
        }

    }//GEN-LAST:event_validateActionPerformed

    private void requestsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestsActionPerformed
        DefaultTableModel model = (DefaultTableModel) tb1.getModel();
        try {
            //Registering JDBC Driver...
            Class.forName("com.mysql.jdbc.Driver");
            //The Database Connection Statement...
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/serverdata", "root", "1111");
            //Statement Object Command...
            Statement stmt = con.createStatement();
            String query = "select * from newcome;";

            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getInt(3), rs.getString(4), rs.getString(5)});

            }
            if (rs.next()) {//Becomes false in its last attempt
                JOptionPane.showMessageDialog(null, "Query failed ! Fatal Error !\n\tContact Software manufacturer !");
                dispose();
            }

            rs.close();
            stmt.close();
            con.close();

        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Failed to Connect to Host.\nTry Again after Sometime.");
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Failed to Connect to Host.\nTry Again after Sometime.");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Failed to Connect to Host.\nTry Again after Sometime.");
        }

    }//GEN-LAST:event_requestsActionPerformed

    private void oprActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oprActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_oprActionPerformed

    private void newlistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newlistActionPerformed
        DefaultTableModel model = (DefaultTableModel) tb2.getModel();
        try {
            //Registering JDBC Driver...
            Class.forName("com.mysql.jdbc.Driver");
            //The Database Connection Statement...
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/serverdata", "root", "1111");
            //Statement Object Command...
            Statement stmt = con.createStatement();
            String query = "select uid,uname,admin_type,grade from priv_usr;";

            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                model.addRow(new Object[]{rs.getInt(1), rs.getString(2), rs.getString(3), rs.getString(4)});

            }
            if (rs.next()) {//Becomes false in its last attempt
                JOptionPane.showMessageDialog(null, "Query failed ! Fatal Error !\n\tContact Software manufacturer !");
                //dispose();
            }

            rs.close();
            stmt.close();
            con.close();

        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Failed to Connect to Host.\nTry Again after Sometime.");
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Failed to Connect to Host.\nTry Again after Sometime.");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Failed to Connect to Host.\nTry Again after Sometime.");
        }

    }//GEN-LAST:event_newlistActionPerformed

    private void lgtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lgtActionPerformed

        dispose();
        new logout().setVisible(true);
    }//GEN-LAST:event_lgtActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        dispose();
        new Options().setVisible(true);
    }//GEN-LAST:event_backActionPerformed
    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("prgicon.png")));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(regadmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(regadmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(regadmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(regadmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
 /*java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new regadmin().setVisible(false);
            }
        });*/
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JTextField grade;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton lgt;
    private javax.swing.JTextField ml;
    private javax.swing.JButton newlist;
    private javax.swing.JTextField opr;
    private javax.swing.JTextField ph;
    private javax.swing.JButton requests;
    private javax.swing.JTable tb1;
    private javax.swing.JTable tb2;
    private javax.swing.JTextField uname;
    private javax.swing.JButton validate;
    // End of variables declaration//GEN-END:variables
}
